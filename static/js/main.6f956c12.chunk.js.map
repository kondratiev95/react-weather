{"version":3,"sources":["components/Search.jsx","components/Card.jsx","components/CardList.jsx","api.js","App.js","index.js"],"names":["Search","city","setCity","getData","className","type","value","onChange","e","target","placeholder","onClick","Card","card","removeCard","updateCard","weather","main","src","icon","alt","parseFloat","temp","toFixed","name","sys","country","id","CardList","data","length","map","getWeather","a","response","axios","get","App","useState","setData","loading","setLoading","console","log","masseage","useEffect","filter","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAAaA,EAAS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACpC,OACI,sBAAKC,UAAU,SAAf,UACI,8BACI,uBACIC,KAAK,OACLC,MAAOL,EACPM,SAAU,SAAAC,GAAC,OAAIN,EAAQM,EAAEC,OAAOH,QAChCI,YAAY,sBAGpB,8BACI,wBACIC,QAASR,EACTC,UAAU,uBAFd,0BCZHQ,EAAO,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACrC,OACI,sBAAKX,UAAU,OAAf,UACI,6BAAKS,EAAKG,QAAQ,GAAGC,OACrB,qBAAKb,UAAU,eAAf,SACI,qBAAKc,IAAG,0CAAqCL,EAAKG,QAAQ,GAAGG,KAArD,QAAiEC,IAAI,cAEjF,6BAAKP,EAAKG,QAAQC,OAClB,qBAAKb,UAAU,cAAf,SACI,+BAAKiB,WAAWR,EAAKI,KAAKK,KAAO,QAAQC,QAAQ,GAAjD,aAEJ,qBAAKnB,UAAU,WAAf,SACI,+BAAI,mBAAGA,UAAU,+BAAjB,IAAoDS,EAAKW,KAAzD,MAAkEX,EAAKY,IAAIC,aAE/E,sBAAKtB,UAAU,YAAf,UACI,wBACIA,UAAU,yBACVO,QAAS,kBAAMG,EAAWD,EAAKc,KAFnC,kBAKA,wBACIvB,UAAU,0BACVO,QAAS,kBAAMI,EAAWF,IAF9B,2BClBHe,EAAW,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMf,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACzC,OACI,qBAAKX,UAAU,QAAf,SACMyB,EAAKC,OACHD,EAAKE,KAAI,SAAAlB,GAAI,OACT,cAAC,EAAD,CAEIA,KAAMA,EACNC,WAAYA,EACZC,WAAYA,GAHPF,EAAKW,SAKd,8D,iBCRPQ,EAAU,uCAAG,WAAO/B,GAAP,eAAAgC,EAAA,sEAEZC,EAAWC,IAAMC,IALf,kDAK0B,YAAQnC,EAAR,kBAJ3B,qCAEW,kBAGXiC,GAHW,mGAAH,sD,MCgERG,MAzDf,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAENT,EAFM,KAEAU,EAFA,OAGWD,mBAAS,UAHpB,mBAGNrC,EAHM,KAGAC,EAHA,OAIiBoC,oBAAS,GAJ1B,mBAINE,EAJM,KAIGC,EAJH,KAMPtC,EAAO,uCAAG,4BAAA8B,EAAA,sEAEZQ,GAAW,GAFC,SAGUT,EAAW/B,GAHrB,OAGNe,EAHM,OAIZuB,EAAQ,CAACvB,EAAQa,MAAV,mBAAmBA,KAC1Ba,QAAQC,IAAI3B,EAAQa,MACpB3B,EAAQ,IACRuC,GAAW,GAPC,kDAUZC,QAAQC,IAAI,KAAMC,UAClBH,GAAW,GAXC,0DAAH,qDA4Bb,OALAI,qBAAU,WACR1C,MAEC,IAGA,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACG,qBAAIA,UAAU,QAAd,UAAsB,mBAAGA,UAAU,gBAAnC,iBACA,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,QAASA,IAGRqC,EAMC,4CALA,cAAC,EAAD,CACEX,KAAMA,EACNf,WA1BK,SAACa,GAClBY,EAAQ,YAAIV,EAAKiB,QAAO,SAAAC,GAAI,OAAIA,EAAKpB,KAAOA,QA0BhCZ,WAvBK,SAACF,aChCtBmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.6f956c12.chunk.js","sourcesContent":["export const Search = ({ city, setCity, getData }) => {\r\n    return (\r\n        <div className=\"search\">\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    value={city} \r\n                    onChange={e => setCity(e.target.value)}\r\n                    placeholder='Enter your city'\r\n                />\r\n            </div>\r\n            <div>\r\n                <button \r\n                    onClick={getData} \r\n                    className='btn btn-outline-dark'\r\n                    >Search\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const Card = ({ card, removeCard, updateCard }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <h4>{card.weather[0].main}</h4>\r\n            <div className=\"weather-icon\">\r\n                <img src={`http://openweathermap.org/img/w/${card.weather[0].icon}.png`} alt=\"imgicon\" />\r\n            </div>\r\n            <h3>{card.weather.main}</h3>\r\n            <div className=\"temperature\">\r\n                <h1>{parseFloat(card.main.temp - 273.15).toFixed(1)}&deg;C</h1>\r\n            </div>\r\n            <div className=\"location\">\r\n                <h3><i className=\"fa fa-street-view location\"></i> {card.name} | {card.sys.country}</h3>\r\n            </div>\r\n            <div className=\"card-btns\">\r\n                <button \r\n                    className='btn btn-outline-danger' \r\n                    onClick={() => removeCard(card.id)}\r\n                    >&times;\r\n                </button>\r\n                <button \r\n                    className='btn btn-outline-success' \r\n                    onClick={() => updateCard(card)}\r\n                    >Update\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Card } from \"./Card\"\r\n\r\nexport const CardList = ({ data, removeCard, updateCard }) => {\r\n    return (\r\n        <div className='cards'>\r\n            { data.length ? \r\n                data.map(card => (\r\n                    <Card \r\n                        key={card.name} \r\n                        card={card} \r\n                        removeCard={removeCard}\r\n                        updateCard={updateCard}\r\n                    />)\r\n                ) : <h3>Please, enter your cities</h3> \r\n            }\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst baseUrl = 'http://api.openweathermap.org/data/2.5/weather?';\r\nconst apiKey = 'd32ab3ce123bede81be4d3d21624b27b';\r\n\r\nexport const getWeather = async (city) => {\r\n    try {\r\n        const response = axios.get(baseUrl + `q=${city}&appid=${apiKey}`);\r\n        return response;\r\n    } \r\n    catch(error) {\r\n        throw error\r\n    }\r\n     \r\n}","import { useState, useEffect } from 'react';\nimport { Search } from './components/Search';\nimport { CardList } from './components/CardList'; \nimport { getWeather } from './api';\n\nimport './App.css';\n\nconst getDataFromLocalStorage = () => {\n  const weatherData = JSON.parse(localStorage.getItem(\"array\"))\n  return weatherData;\n}\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [city, setCity] = useState('London');\n  const [loading, setLoading] = useState(false);\n\n  const getData = async () => {\n    try {\n      setLoading(true);\n      const weather = await getWeather(city);\n      setData([weather.data, ...data]);\n      console.log(weather.data);\n      setCity('');\n      setLoading(false)\n    }\n    catch(error) {\n      console.log(error.masseage);\n      setLoading(false);\n    }\n  }\n\n  const removeCard = (id) => {\n    setData([...data.filter(item => item.id !== id)])\n  }\n\n  const updateCard = (card) => {\n\n  }\n\n  useEffect(() => {\n    getData();\n    // localStorage.setItem('array', JSON.stringify(data));\n  }, [])\n\n  return (\n     <div className=\"App\">\n       <div className=\"container\">\n          <h2 className=\"title\"><i className=\"fa fa-cloud\"></i>Weather App</h2>\n          <Search \n            city={city} \n            setCity={setCity} \n            getData={getData}\n          />\n          {\n            !loading ? \n              <CardList \n                data={data} \n                removeCard={removeCard} \n                updateCard={updateCard}\n              />\n            : <h2>Loading...</h2>\n          }\n       </div>\n     </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}