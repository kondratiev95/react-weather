{"version":3,"sources":["api.js","components/City.jsx","components/Search.jsx","components/Card.jsx","components/CardList.jsx","components/Main.jsx","App.js","index.js"],"names":["instance","axios","create","baseURL","params","appid","process","getWeather","city","a","get","q","response","City","useState","setCity","name","useParams","goBack","useHistory","useEffect","weather","console","log","data","className","onClick","Search","value","onChange","onSubmit","type","placeholder","Card","card","removeCard","updateCard","main","src","icon","alt","parseFloat","temp","toFixed","sys","country","id","to","CardList","length","map","reducer","state","action","find","payload","filter","item","Main","useReducer","JSON","parse","localStorage","getItem","dispatch","loading","setLoading","getData","weatherCity","Promise","resolve","masseage","setItem","stringify","e","target","then","addCard","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.017380f9.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst APP_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.openweathermap.org/data/2.5\",\r\n  params: {\r\n    appid: APP_KEY\r\n  }\r\n});\r\n\r\nexport const getWeather = async (city) => {\r\n  try {\r\n    const response = await instance.get(\"/weather\", {\r\n      params: {\r\n        q: city\r\n      }\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { getWeather } from '../api';\r\n\r\nexport const City = () => {\r\n\r\n    const [city, setCity] = useState({});\r\n    const { name } = useParams();\r\n    const { goBack } = useHistory();\r\n\r\n    useEffect(async () => {\r\n        const weather = await getWeather(name)\r\n        console.log(weather);\r\n        setCity(weather.data);\r\n    }, [name]);\r\n\r\n\r\n    return <div className='city-page'>\r\n        <button onClick={goBack} className='btn btn-outline-secondary'>Back</button>\r\n        <h1><b>{city.name}</b></h1>\r\n    </div>\r\n}","export const Search = ({ value, onChange, onSubmit }) => {\r\n  return (\r\n    <div className=\"search\">\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder=\"Enter your city\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onSubmit(value)}\r\n          className=\"btn btn-outline-dark\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n  ","import { Link } from 'react-router-dom';\r\n\r\n\r\nexport const Card = ({ card, removeCard, updateCard }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <h4>{card.weather[0].main}</h4>\r\n            <div className=\"weather-icon\">\r\n            <img\r\n                src={`http://openweathermap.org/img/w/${card.weather[0].icon}.png`}\r\n                alt=\"imgicon\"\r\n            />\r\n            </div>\r\n            <h3>{card.weather.main}</h3>\r\n            <div className=\"temperature\">\r\n            <h1>{parseFloat(card.main.temp - 273.15).toFixed(1)}&deg;C</h1>\r\n            </div>\r\n            <div className=\"location\">\r\n            <h3>\r\n                <i className=\"fa fa-street-view location\"></i> {card.name} |{\" \"}\r\n                {card.sys.country}\r\n            </h3>\r\n            </div>\r\n            <div className=\"card-btns\">\r\n                <button\r\n                    className=\"btn btn-outline-danger\"\r\n                    onClick={() => removeCard(card.id)}\r\n                >\r\n                    &times;\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-outline-success\"\r\n                    onClick={() => updateCard(card)}\r\n                >\r\n                    Update\r\n                </button>\r\n                <Link to={`/info/${card.name}`} className=\"btn btn-outline-primary\">More info</Link>\r\n            </div>\r\n        </div>         \r\n    );\r\n  };\r\n  ","import { Card } from \"./Card\";\r\n\r\nexport const CardList = ({ data, removeCard, updateCard }) => {\r\n  return (\r\n    <div className=\"cards\">\r\n      {data.length ? (\r\n        data?.map((card) => (\r\n            <Card\r\n                key={card.name}\r\n                card={card}\r\n                removeCard={removeCard}\r\n                updateCard={updateCard}\r\n            />\r\n        ))\r\n      ) : (\r\n        <h3>Please, enter your cities</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect, useReducer } from \"react\";\r\nimport { Search } from \"./Search\";\r\nimport { CardList } from \"./CardList\";\r\nimport { getWeather } from \"../api\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      if (!state.find(({ id }) => id === action.payload.id)) {\r\n        return [...state, action.payload];\r\n      }\r\n      return state;\r\n\r\n    case \"remove\":\r\n      return state.filter((item) => item.id !== action.payload.id);\r\n\r\n    case \"update\":\r\n      return state.map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          return {\r\n            ...item,\r\n            ...action.payload\r\n          };\r\n        }\r\n\r\n        return item;\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const Main = () => {\r\n\r\n  const [data, dispatch] = useReducer(\r\n    reducer,\r\n    JSON.parse(localStorage.getItem(\"data\")) ?? []\r\n  );\r\n  const [city, setCity] = useState(\"London\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getData = async (city) => {\r\n    try {\r\n      setLoading(true);\r\n      const weatherCity = await getWeather(city);\r\n\r\n      setCity(\"\");\r\n      setLoading(false);\r\n\r\n      return Promise.resolve(weatherCity);\r\n    } catch (error) {\r\n      console.log(error.masseage);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addCard = (data) => {\r\n    dispatch({\r\n      type: \"add\",\r\n      payload: data\r\n    });\r\n  };\r\n\r\n  const removeCard = (id) => {\r\n    dispatch({\r\n      type: \"remove\",\r\n      payload: {\r\n        id\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateCard = (data) => {\r\n    dispatch({\r\n      type: \"update\",\r\n      payload: data\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"data\", JSON.stringify(data));\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <h2 className=\"title\">\r\n          <i className=\"fa fa-cloud\"></i>Weather App\r\n        </h2>\r\n        <Search\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n          onSubmit={(city) => {\r\n            if (city) {\r\n              getData(city).then(({ data }) => {\r\n                addCard(data);\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        {!loading ? (\r\n          <CardList\r\n            data={data}\r\n            removeCard={removeCard}\r\n            updateCard={(card) => {\r\n              console.log(card);\r\n              getData(card?.name).then((data) => {\r\n                updateCard(data);\r\n              });\r\n            }}\r\n          />\r\n        ) : (\r\n          <h2>Loading...</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { City } from \"./components/City\";\nimport { Main }  from './components/Main';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n      <Router>\n        <Switch>\n            <Route exact path='/react-weather' component={Main}/>\n            <Route path='/info/:name' component={City}/>\n        </Switch>\n    </Router>\n  );\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}